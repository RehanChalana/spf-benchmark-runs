./jpf-sv-comp --propertyfile ../../sv-benchmarks/java/properties/runtime-exception.prp ../../sv-benchmarks/java/common ../../sv-benchmarks/java/jbmc-regression/tableswitch1


--------------------------------------------------------------------------------


/tmp/jpf-benchmark.MIgJyh/config.jpf
LD_LIBRARY_PATH=/home/rc22/code/gsoc/bench-defs/bin/spf-dx88J72lU9/jpf-symbc/lib:
Running Symbolic PathFinder ...
symbolic.dp=[z3, choco]
symbolic.string_dp_timeout_ms=3000
symbolic.string_dp_alpha=A-Z
symbolic.string_dp_alphaSize=26
symbolic.string_dp_upper=10
symbolic.string_dp_lower=1
symbolic.string_dp=none
symbolic.choco_time_bound=30000
symbolic.max_pc_length=2147483647
symbolic.max_pc_msec=0
symbolic.bvlength=64
symbolic.min_int=-2147483648
symbolic.min_long=-9223372036854775808
symbolic.min_short=-32768
symbolic.min_byte=-128
symbolic.min_char=0
symbolic.max_int=2147483647
symbolic.max_long=9223372036854775807
symbolic.max_short=32767
symbolic.max_byte=127
symbolic.max_char=65535
symbolic.min_double=4.9E-324
symbolic.max_double=1.7976931348623157E308
JavaPathfinder core system v8.0 (rev 4d2d417b713391c923fcff22fc7ee9a8fd986a41) - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
Main.main()

====================================================== search started: 6/22/25 9:41 PM
New sym int int0 min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_0 -> true

### PCs: total:1 sat:1 unsat:0

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_0 -> false

### PCs: total:2 sat:1 unsat:1

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_0 -> true

### PCs: total:3 sat:2 unsat:1

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_0 -> false

### PCs: total:4 sat:2 unsat:2

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_0 -> true

### PCs: total:5 sat:3 unsat:2

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_0 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_0 -> true

### PCs: total:6 sat:4 unsat:2

string analysis: SPC # = 0
NPC constraint # = 2
CONST_0 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_0 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_0 -> false

### PCs: total:7 sat:4 unsat:3

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[-1] - CONST_-1) == CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_1 -> true

### PCs: total:8 sat:5 unsat:3

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_1
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_1 -> false

### PCs: total:9 sat:5 unsat:4

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_1 -> true

### PCs: total:10 sat:6 unsat:4

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_1
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_1 -> false

### PCs: total:11 sat:6 unsat:5

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_1 -> true

### PCs: total:12 sat:7 unsat:5

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_1
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_1 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_1 -> true

### PCs: total:13 sat:8 unsat:5

string analysis: SPC # = 0
NPC constraint # = 2
CONST_1 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_1
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_1 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_1 -> false

### PCs: total:14 sat:8 unsat:6

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_1 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[0] - CONST_-1) == CONST_1
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_2 -> true

### PCs: total:15 sat:9 unsat:6

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_2
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_2 -> false

### PCs: total:16 sat:9 unsat:7

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_2 -> true

### PCs: total:17 sat:10 unsat:7

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_2
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_2 -> false

### PCs: total:18 sat:10 unsat:8

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_2 -> true

### PCs: total:19 sat:11 unsat:8

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_2
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_2 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_2 -> true

### PCs: total:20 sat:12 unsat:8

string analysis: SPC # = 0
NPC constraint # = 2
CONST_2 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_2
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_2 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_2 -> false

### PCs: total:21 sat:12 unsat:9

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_2 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[1] - CONST_-1) == CONST_2
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_3 -> true

### PCs: total:22 sat:13 unsat:9

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_3
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_3 -> false

### PCs: total:23 sat:13 unsat:10

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_3 -> true

### PCs: total:24 sat:14 unsat:10

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_3
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_3 -> false

### PCs: total:25 sat:14 unsat:11

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_3 -> true

### PCs: total:26 sat:15 unsat:11

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_3
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_3 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_3 -> true

### PCs: total:27 sat:16 unsat:11

string analysis: SPC # = 0
NPC constraint # = 2
CONST_3 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_3
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_3 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_3 -> false

### PCs: total:28 sat:16 unsat:12

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_3 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[2] - CONST_-1) == CONST_3
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_4 -> true

### PCs: total:29 sat:17 unsat:12

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_4
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_4 -> false

### PCs: total:30 sat:17 unsat:13

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_4 -> true

### PCs: total:31 sat:18 unsat:13

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_4
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_4 -> false

### PCs: total:32 sat:18 unsat:14

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_4 -> true

### PCs: total:33 sat:19 unsat:14

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_4
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_4 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_4 -> true

### PCs: total:34 sat:20 unsat:14

string analysis: SPC # = 0
NPC constraint # = 2
CONST_4 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_4
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_4 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_4 -> false

### PCs: total:35 sat:20 unsat:15

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_4 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[3] - CONST_-1) == CONST_4
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_5 -> true

### PCs: total:36 sat:21 unsat:15

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_5
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_5 -> false

### PCs: total:37 sat:21 unsat:16

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_5 -> true

### PCs: total:38 sat:22 unsat:16

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_5
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_5 -> false

### PCs: total:39 sat:22 unsat:17

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_5 -> true

### PCs: total:40 sat:23 unsat:17

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_5
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_5 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_5 -> true

### PCs: total:41 sat:24 unsat:17

string analysis: SPC # = 0
NPC constraint # = 2
CONST_5 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_5
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_5 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_5 -> false

### PCs: total:42 sat:24 unsat:18

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_5 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[4] - CONST_-1) == CONST_5
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_6 -> true

### PCs: total:43 sat:25 unsat:18

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_6
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_6 -> false

### PCs: total:44 sat:25 unsat:19

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_6 -> true

### PCs: total:45 sat:26 unsat:19

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_6
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_6 -> false

### PCs: total:46 sat:26 unsat:20

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_6 -> true

### PCs: total:47 sat:27 unsat:20

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_6
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_6 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_6 -> true

### PCs: total:48 sat:28 unsat:20

string analysis: SPC # = 0
NPC constraint # = 2
CONST_6 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_6
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_6 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_6 -> false

### PCs: total:49 sat:28 unsat:21

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_6 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[5] - CONST_-1) == CONST_6
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_7 -> true

### PCs: total:50 sat:29 unsat:21

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_7
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_7 -> false

### PCs: total:51 sat:29 unsat:22

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_7 -> true

### PCs: total:52 sat:30 unsat:22

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_7
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_7 -> false

### PCs: total:53 sat:30 unsat:23

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_7 -> true

### PCs: total:54 sat:31 unsat:23

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_7
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_7 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_7 -> true

### PCs: total:55 sat:32 unsat:23

string analysis: SPC # = 0
NPC constraint # = 2
CONST_7 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_7
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_7 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_7 -> false

### PCs: total:56 sat:32 unsat:24

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_7 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[6] - CONST_-1) == CONST_7
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_8 -> true

### PCs: total:57 sat:33 unsat:24

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_8
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_8 -> false

### PCs: total:58 sat:33 unsat:25

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_8 -> true

### PCs: total:59 sat:34 unsat:25

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_8
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_8 -> false

### PCs: total:60 sat:34 unsat:26

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_8 -> true

### PCs: total:61 sat:35 unsat:26

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_8
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_8 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_8 -> true

### PCs: total:62 sat:36 unsat:26

string analysis: SPC # = 0
NPC constraint # = 2
CONST_8 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_8
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_8 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_8 -> false

### PCs: total:63 sat:36 unsat:27

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_8 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[7] - CONST_-1) == CONST_8
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_9 -> true

### PCs: total:64 sat:37 unsat:27

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_9
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_9 -> false

### PCs: total:65 sat:37 unsat:28

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_9 -> true

### PCs: total:66 sat:38 unsat:28

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_9
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_9 -> false

### PCs: total:67 sat:38 unsat:29

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_9 -> true

### PCs: total:68 sat:39 unsat:29

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_9
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_9 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_9 -> true

### PCs: total:69 sat:40 unsat:29

string analysis: SPC # = 0
NPC constraint # = 2
CONST_9 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_9
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_9 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_9 -> false

### PCs: total:70 sat:40 unsat:30

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_9 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[8] - CONST_-1) == CONST_9
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_10 -> true

### PCs: total:71 sat:41 unsat:30

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_10
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_10 -> false

### PCs: total:72 sat:41 unsat:31

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_10 -> true

### PCs: total:73 sat:42 unsat:31

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_10
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_10 -> false

### PCs: total:74 sat:42 unsat:32

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_10 -> true

### PCs: total:75 sat:43 unsat:32

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_10
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_10 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_10 -> true

### PCs: total:76 sat:44 unsat:32

string analysis: SPC # = 0
NPC constraint # = 2
CONST_10 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_10
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_10 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_10 -> false

### PCs: total:77 sat:44 unsat:33

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_10 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[9] - CONST_-1) == CONST_10
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_11 -> true

### PCs: total:78 sat:45 unsat:33

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_11
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_11 -> false

### PCs: total:79 sat:45 unsat:34

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_11 -> true

### PCs: total:80 sat:46 unsat:34

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_11
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_11 -> false

### PCs: total:81 sat:46 unsat:35

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_11 -> true

### PCs: total:82 sat:47 unsat:35

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_11
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_11 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_11 -> true

### PCs: total:83 sat:48 unsat:35

string analysis: SPC # = 0
NPC constraint # = 2
CONST_11 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_11
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_11 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_11 -> false

### PCs: total:84 sat:48 unsat:36

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_11 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[10] - CONST_-1) == CONST_11
Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_12 -> true

### PCs: total:85 sat:49 unsat:36

string analysis: SPC # = 0
NPC constraint # = 1
(int0 - CONST_-1) == CONST_12
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_-1 &&
(int0 - CONST_-1) == CONST_12 -> false

### PCs: total:86 sat:49 unsat:37

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_12 -> true

### PCs: total:87 sat:50 unsat:37

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_-1 &&
(int0 - CONST_-1) == CONST_12
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 > CONST_11 &&
(int0 - CONST_-1) == CONST_12 -> false

### PCs: total:88 sat:50 unsat:38

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_12 -> true

### PCs: total:89 sat:51 unsat:38

string analysis: SPC # = 0
NPC constraint # = 2
int0 <= CONST_11 &&
(int0 - CONST_-1) == CONST_12
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_12 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_12 -> true

### PCs: total:90 sat:52 unsat:38

string analysis: SPC # = 0
NPC constraint # = 2
CONST_12 == (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_12
Using solver: ProblemZ3
numeric PC: constraint # = 2
CONST_12 != (int0 + CONST_1) &&
(int0 - CONST_-1) == CONST_12 -> false

### PCs: total:91 sat:52 unsat:39

Using solver: ProblemZ3
numeric PC: constraint # = 1
(int0 - CONST_-1) == CONST_12 -> true

string analysis: SPC # = 0
NPC constraint # = 1
(int0[11] - CONST_-1) == CONST_12
Using solver: ProblemZ3
numeric PC: constraint # = 13
(int0 - CONST_-1) != CONST_12 &&
(int0 - CONST_-1) != CONST_11 &&
(int0 - CONST_-1) != CONST_10 &&
(int0 - CONST_-1) != CONST_9 &&
(int0 - CONST_-1) != CONST_8 &&
(int0 - CONST_-1) != CONST_7 &&
(int0 - CONST_-1) != CONST_6 &&
(int0 - CONST_-1) != CONST_5 &&
(int0 - CONST_-1) != CONST_4 &&
(int0 - CONST_-1) != CONST_3 &&
(int0 - CONST_-1) != CONST_2 &&
(int0 - CONST_-1) != CONST_1 &&
(int0 - CONST_-1) != CONST_0 -> true

### PCs: total:92 sat:53 unsat:39

string analysis: SPC # = 0
NPC constraint # = 13
(int0 - CONST_-1) != CONST_12 &&
(int0 - CONST_-1) != CONST_11 &&
(int0 - CONST_-1) != CONST_10 &&
(int0 - CONST_-1) != CONST_9 &&
(int0 - CONST_-1) != CONST_8 &&
(int0 - CONST_-1) != CONST_7 &&
(int0 - CONST_-1) != CONST_6 &&
(int0 - CONST_-1) != CONST_5 &&
(int0 - CONST_-1) != CONST_4 &&
(int0 - CONST_-1) != CONST_3 &&
(int0 - CONST_-1) != CONST_2 &&
(int0 - CONST_-1) != CONST_1 &&
(int0 - CONST_-1) != CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 14
int0 < CONST_-1 &&
(int0 - CONST_-1) != CONST_12 &&
(int0 - CONST_-1) != CONST_11 &&
(int0 - CONST_-1) != CONST_10 &&
(int0 - CONST_-1) != CONST_9 &&
(int0 - CONST_-1) != CONST_8 &&
(int0 - CONST_-1) != CONST_7 &&
(int0 - CONST_-1) != CONST_6 &&
(int0 - CONST_-1) != CONST_5 &&
(int0 - CONST_-1) != CONST_4 &&
(int0 - CONST_-1) != CONST_3 &&
(int0 - CONST_-1) != CONST_2 &&
(int0 - CONST_-1) != CONST_1 &&
(int0 - CONST_-1) != CONST_0 -> true

### PCs: total:93 sat:54 unsat:39

string analysis: SPC # = 0
NPC constraint # = 14
int0 < CONST_-1 &&
(int0 - CONST_-1) != CONST_12 &&
(int0 - CONST_-1) != CONST_11 &&
(int0 - CONST_-1) != CONST_10 &&
(int0 - CONST_-1) != CONST_9 &&
(int0 - CONST_-1) != CONST_8 &&
(int0 - CONST_-1) != CONST_7 &&
(int0 - CONST_-1) != CONST_6 &&
(int0 - CONST_-1) != CONST_5 &&
(int0 - CONST_-1) != CONST_4 &&
(int0 - CONST_-1) != CONST_3 &&
(int0 - CONST_-1) != CONST_2 &&
(int0 - CONST_-1) != CONST_1 &&
(int0 - CONST_-1) != CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 14
int0 >= CONST_-1 &&
(int0 - CONST_-1) != CONST_12 &&
(int0 - CONST_-1) != CONST_11 &&
(int0 - CONST_-1) != CONST_10 &&
(int0 - CONST_-1) != CONST_9 &&
(int0 - CONST_-1) != CONST_8 &&
(int0 - CONST_-1) != CONST_7 &&
(int0 - CONST_-1) != CONST_6 &&
(int0 - CONST_-1) != CONST_5 &&
(int0 - CONST_-1) != CONST_4 &&
(int0 - CONST_-1) != CONST_3 &&
(int0 - CONST_-1) != CONST_2 &&
(int0 - CONST_-1) != CONST_1 &&
(int0 - CONST_-1) != CONST_0 -> true

### PCs: total:94 sat:55 unsat:39

string analysis: SPC # = 0
NPC constraint # = 14
int0 >= CONST_-1 &&
(int0 - CONST_-1) != CONST_12 &&
(int0 - CONST_-1) != CONST_11 &&
(int0 - CONST_-1) != CONST_10 &&
(int0 - CONST_-1) != CONST_9 &&
(int0 - CONST_-1) != CONST_8 &&
(int0 - CONST_-1) != CONST_7 &&
(int0 - CONST_-1) != CONST_6 &&
(int0 - CONST_-1) != CONST_5 &&
(int0 - CONST_-1) != CONST_4 &&
(int0 - CONST_-1) != CONST_3 &&
(int0 - CONST_-1) != CONST_2 &&
(int0 - CONST_-1) != CONST_1 &&
(int0 - CONST_-1) != CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 15
int0 > CONST_11 &&
int0 >= CONST_-1 &&
(int0 - CONST_-1) != CONST_12 &&
(int0 - CONST_-1) != CONST_11 &&
(int0 - CONST_-1) != CONST_10 &&
(int0 - CONST_-1) != CONST_9 &&
(int0 - CONST_-1) != CONST_8 &&
(int0 - CONST_-1) != CONST_7 &&
(int0 - CONST_-1) != CONST_6 &&
(int0 - CONST_-1) != CONST_5 &&
(int0 - CONST_-1) != CONST_4 &&
(int0 - CONST_-1) != CONST_3 &&
(int0 - CONST_-1) != CONST_2 &&
(int0 - CONST_-1) != CONST_1 &&
(int0 - CONST_-1) != CONST_0 -> true

### PCs: total:95 sat:56 unsat:39

string analysis: SPC # = 0
NPC constraint # = 15
int0 > CONST_11 &&
int0 >= CONST_-1 &&
(int0 - CONST_-1) != CONST_12 &&
(int0 - CONST_-1) != CONST_11 &&
(int0 - CONST_-1) != CONST_10 &&
(int0 - CONST_-1) != CONST_9 &&
(int0 - CONST_-1) != CONST_8 &&
(int0 - CONST_-1) != CONST_7 &&
(int0 - CONST_-1) != CONST_6 &&
(int0 - CONST_-1) != CONST_5 &&
(int0 - CONST_-1) != CONST_4 &&
(int0 - CONST_-1) != CONST_3 &&
(int0 - CONST_-1) != CONST_2 &&
(int0 - CONST_-1) != CONST_1 &&
(int0 - CONST_-1) != CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 15
int0 <= CONST_11 &&
int0 >= CONST_-1 &&
(int0 - CONST_-1) != CONST_12 &&
(int0 - CONST_-1) != CONST_11 &&
(int0 - CONST_-1) != CONST_10 &&
(int0 - CONST_-1) != CONST_9 &&
(int0 - CONST_-1) != CONST_8 &&
(int0 - CONST_-1) != CONST_7 &&
(int0 - CONST_-1) != CONST_6 &&
(int0 - CONST_-1) != CONST_5 &&
(int0 - CONST_-1) != CONST_4 &&
(int0 - CONST_-1) != CONST_3 &&
(int0 - CONST_-1) != CONST_2 &&
(int0 - CONST_-1) != CONST_1 &&
(int0 - CONST_-1) != CONST_0 -> false

### PCs: total:96 sat:56 unsat:40

Using solver: ProblemZ3
numeric PC: constraint # = 14
int0 >= CONST_-1 &&
(int0 - CONST_-1) != CONST_12 &&
(int0 - CONST_-1) != CONST_11 &&
(int0 - CONST_-1) != CONST_10 &&
(int0 - CONST_-1) != CONST_9 &&
(int0 - CONST_-1) != CONST_8 &&
(int0 - CONST_-1) != CONST_7 &&
(int0 - CONST_-1) != CONST_6 &&
(int0 - CONST_-1) != CONST_5 &&
(int0 - CONST_-1) != CONST_4 &&
(int0 - CONST_-1) != CONST_3 &&
(int0 - CONST_-1) != CONST_2 &&
(int0 - CONST_-1) != CONST_1 &&
(int0 - CONST_-1) != CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 14
int0[12] >= CONST_-1 &&
(int0[12] - CONST_-1) != CONST_12 &&
(int0[12] - CONST_-1) != CONST_11 &&
(int0[12] - CONST_-1) != CONST_10 &&
(int0[12] - CONST_-1) != CONST_9 &&
(int0[12] - CONST_-1) != CONST_8 &&
(int0[12] - CONST_-1) != CONST_7 &&
(int0[12] - CONST_-1) != CONST_6 &&
(int0[12] - CONST_-1) != CONST_5 &&
(int0[12] - CONST_-1) != CONST_4 &&
(int0[12] - CONST_-1) != CONST_3 &&
(int0[12] - CONST_-1) != CONST_2 &&
(int0[12] - CONST_-1) != CONST_1 &&
(int0[12] - CONST_-1) != CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 14
int0 < CONST_-1 &&
(int0 - CONST_-1) != CONST_12 &&
(int0 - CONST_-1) != CONST_11 &&
(int0 - CONST_-1) != CONST_10 &&
(int0 - CONST_-1) != CONST_9 &&
(int0 - CONST_-1) != CONST_8 &&
(int0 - CONST_-1) != CONST_7 &&
(int0 - CONST_-1) != CONST_6 &&
(int0 - CONST_-1) != CONST_5 &&
(int0 - CONST_-1) != CONST_4 &&
(int0 - CONST_-1) != CONST_3 &&
(int0 - CONST_-1) != CONST_2 &&
(int0 - CONST_-1) != CONST_1 &&
(int0 - CONST_-1) != CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 14
int0[-2] < CONST_-1 &&
(int0[-2] - CONST_-1) != CONST_12 &&
(int0[-2] - CONST_-1) != CONST_11 &&
(int0[-2] - CONST_-1) != CONST_10 &&
(int0[-2] - CONST_-1) != CONST_9 &&
(int0[-2] - CONST_-1) != CONST_8 &&
(int0[-2] - CONST_-1) != CONST_7 &&
(int0[-2] - CONST_-1) != CONST_6 &&
(int0[-2] - CONST_-1) != CONST_5 &&
(int0[-2] - CONST_-1) != CONST_4 &&
(int0[-2] - CONST_-1) != CONST_3 &&
(int0[-2] - CONST_-1) != CONST_2 &&
(int0[-2] - CONST_-1) != CONST_1 &&
(int0[-2] - CONST_-1) != CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 13
(int0[-2] - CONST_-1) != CONST_12 &&
(int0[-2] - CONST_-1) != CONST_11 &&
(int0[-2] - CONST_-1) != CONST_10 &&
(int0[-2] - CONST_-1) != CONST_9 &&
(int0[-2] - CONST_-1) != CONST_8 &&
(int0[-2] - CONST_-1) != CONST_7 &&
(int0[-2] - CONST_-1) != CONST_6 &&
(int0[-2] - CONST_-1) != CONST_5 &&
(int0[-2] - CONST_-1) != CONST_4 &&
(int0[-2] - CONST_-1) != CONST_3 &&
(int0[-2] - CONST_-1) != CONST_2 &&
(int0[-2] - CONST_-1) != CONST_1 &&
(int0[-2] - CONST_-1) != CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 13
(int0[-2] - CONST_-1) != CONST_12 &&
(int0[-2] - CONST_-1) != CONST_11 &&
(int0[-2] - CONST_-1) != CONST_10 &&
(int0[-2] - CONST_-1) != CONST_9 &&
(int0[-2] - CONST_-1) != CONST_8 &&
(int0[-2] - CONST_-1) != CONST_7 &&
(int0[-2] - CONST_-1) != CONST_6 &&
(int0[-2] - CONST_-1) != CONST_5 &&
(int0[-2] - CONST_-1) != CONST_4 &&
(int0[-2] - CONST_-1) != CONST_3 &&
(int0[-2] - CONST_-1) != CONST_2 &&
(int0[-2] - CONST_-1) != CONST_1 &&
(int0[-2] - CONST_-1) != CONST_0

====================================================== Method Sequences
[]

====================================================== JUnit 4.0 test class
import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;

public class Test {

	private  ;

	@Before
	public void setUp() throws Exception {
		 = new ();
	}

	public void test0() {
	}
}

====================================================== results
no errors detected

====================================================== statistics
elapsed time:       00:00:00
states:             new=17,visited=0,backtracked=17,end=15
search:             maxDepth=3,constraints=0
choice generators:  thread=1 (signal=0,lock=1,sharedRef=0,threadApi=0,reschedule=0), data=2
heap:               new=466,released=143,maxLive=458,gcCycles=16
instructions:       6624
max memory:         232MB
loaded code:        classes=85,methods=1828

====================================================== search finished: 6/22/25 9:41 PM
SAFE
