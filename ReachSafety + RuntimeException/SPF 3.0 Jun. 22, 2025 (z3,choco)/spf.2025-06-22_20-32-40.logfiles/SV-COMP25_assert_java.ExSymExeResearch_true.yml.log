./jpf-sv-comp --propertyfile ../../sv-benchmarks/java/properties/assert_java.prp ../../sv-benchmarks/java/common ../../sv-benchmarks/java/jpf-regression/ExSymExeResearch_true


--------------------------------------------------------------------------------


/tmp/jpf-benchmark.bprIBd/config.jpf
LD_LIBRARY_PATH=/home/rc22/code/gsoc/bench-defs/bin/spf-dx88J72lU9/jpf-symbc/lib:
Running Symbolic PathFinder ...
symbolic.dp=[z3, choco]
symbolic.string_dp_timeout_ms=3000
symbolic.string_dp_alpha=A-Z
symbolic.string_dp_alphaSize=26
symbolic.string_dp_upper=10
symbolic.string_dp_lower=1
symbolic.string_dp=none
symbolic.choco_time_bound=30000
symbolic.max_pc_length=2147483647
symbolic.max_pc_msec=0
symbolic.bvlength=64
symbolic.min_int=-2147483648
symbolic.min_long=-9223372036854775808
symbolic.min_short=-32768
symbolic.min_byte=-128
symbolic.min_char=0
symbolic.max_int=2147483647
symbolic.max_long=9223372036854775807
symbolic.max_short=32767
symbolic.max_byte=127
symbolic.max_char=65535
symbolic.min_double=4.9E-324
symbolic.max_double=1.7976931348623157E308
JavaPathfinder core system v8.0 (rev 4d2d417b713391c923fcff22fc7ee9a8fd986a41) - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
Main.main()

====================================================== search started: 6/22/25 9:02 PM
New sym int int0 min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 1
int0 <= CONST_0 -> true

### PCs: total:1 sat:1 unsat:0

string analysis: SPC # = 0
NPC constraint # = 1
int0 <= CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 1
int0 > CONST_0 -> true

### PCs: total:2 sat:2 unsat:0

string analysis: SPC # = 0
NPC constraint # = 1
int0 > CONST_0
Testing ExSymExeResearch
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:3 sat:2 unsat:1

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:4 sat:3 unsat:1

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_100 &&
int0 > CONST_0 -> true

### PCs: total:5 sat:4 unsat:1

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_100 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_100 &&
int0 > CONST_0 -> true

### PCs: total:6 sat:5 unsat:1

string analysis: SPC # = 0
NPC constraint # = 2
int0 < CONST_100 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
(int0 + CONST_5) <= CONST_0 &&
int0 < CONST_100 &&
int0 > CONST_0 -> false

### PCs: total:7 sat:5 unsat:2

Using solver: ProblemZ3
numeric PC: constraint # = 3
(int0 + CONST_5) > CONST_0 &&
int0 < CONST_100 &&
int0 > CONST_0 -> true

### PCs: total:8 sat:6 unsat:2

string analysis: SPC # = 0
NPC constraint # = 3
(int0 + CONST_5) > CONST_0 &&
int0 < CONST_100 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
int0 >= (int0 - CONST_5) &&
int0 < CONST_100 &&
int0 > CONST_0 -> true

### PCs: total:9 sat:7 unsat:2

string analysis: SPC # = 0
NPC constraint # = 3
int0 >= (int0 - CONST_5) &&
int0 < CONST_100 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
int0 < (int0 - CONST_5) &&
int0 < CONST_100 &&
int0 > CONST_0 -> false

### PCs: total:10 sat:7 unsat:3

Using solver: ProblemZ3
numeric PC: constraint # = 3
(int0 - CONST_5) != (int0 + CONST_5) &&
int0 < CONST_100 &&
int0 > CONST_0 -> true

### PCs: total:11 sat:8 unsat:3

string analysis: SPC # = 0
NPC constraint # = 3
(int0 - CONST_5) != (int0 + CONST_5) &&
int0 < CONST_100 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
(int0 - CONST_5) == (int0 + CONST_5) &&
int0 < CONST_100 &&
int0 > CONST_0 -> false

### PCs: total:12 sat:8 unsat:4

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_100 &&
int0 > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 2
int0[1] < CONST_100 &&
int0[1] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
CONST_0 != (int0 + CONST_5) &&
int0 >= CONST_100 &&
int0 > CONST_0 -> true

### PCs: total:13 sat:9 unsat:4

string analysis: SPC # = 0
NPC constraint # = 3
CONST_0 != (int0 + CONST_5) &&
int0 >= CONST_100 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
CONST_0 == (int0 + CONST_5) &&
int0 >= CONST_100 &&
int0 > CONST_0 -> false

### PCs: total:14 sat:9 unsat:5

Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_100 &&
int0 > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 2
int0[100] >= CONST_100 &&
int0[100] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 1
int0[100] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 1
int0[1] > CONST_0
Testing ExSymExeResearch
Using solver: ProblemZ3
numeric PC: constraint # = 2
(CONST_0 - int0) < CONST_0 &&
int0 <= CONST_0 -> false

### PCs: total:15 sat:9 unsat:6

Using solver: ProblemZ3
numeric PC: constraint # = 2
(CONST_0 - int0) >= CONST_0 &&
int0 <= CONST_0 -> true

### PCs: total:16 sat:10 unsat:6

string analysis: SPC # = 0
NPC constraint # = 2
(CONST_0 - int0) >= CONST_0 &&
int0 <= CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 2
(CONST_0 - int0) >= CONST_100 &&
int0 <= CONST_0 -> true

### PCs: total:17 sat:11 unsat:6

string analysis: SPC # = 0
NPC constraint # = 2
(CONST_0 - int0) >= CONST_100 &&
int0 <= CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 2
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0 -> true

### PCs: total:18 sat:12 unsat:6

string analysis: SPC # = 0
NPC constraint # = 2
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
((CONST_0 - int0) + CONST_5) <= CONST_0 &&
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0 -> false

### PCs: total:19 sat:12 unsat:7

Using solver: ProblemZ3
numeric PC: constraint # = 3
((CONST_0 - int0) + CONST_5) > CONST_0 &&
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0 -> true

### PCs: total:20 sat:13 unsat:7

string analysis: SPC # = 0
NPC constraint # = 3
((CONST_0 - int0) + CONST_5) > CONST_0 &&
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
(CONST_0 - int0) >= ((CONST_0 - int0) - CONST_5) &&
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0 -> true

### PCs: total:21 sat:14 unsat:7

string analysis: SPC # = 0
NPC constraint # = 3
(CONST_0 - int0) >= ((CONST_0 - int0) - CONST_5) &&
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
(CONST_0 - int0) < ((CONST_0 - int0) - CONST_5) &&
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0 -> false

### PCs: total:22 sat:14 unsat:8

Using solver: ProblemZ3
numeric PC: constraint # = 3
((CONST_0 - int0) - CONST_5) != ((CONST_0 - int0) + CONST_5) &&
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0 -> true

### PCs: total:23 sat:15 unsat:8

string analysis: SPC # = 0
NPC constraint # = 3
((CONST_0 - int0) - CONST_5) != ((CONST_0 - int0) + CONST_5) &&
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
((CONST_0 - int0) - CONST_5) == ((CONST_0 - int0) + CONST_5) &&
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0 -> false

### PCs: total:24 sat:15 unsat:9

Using solver: ProblemZ3
numeric PC: constraint # = 2
(CONST_0 - int0) < CONST_100 &&
int0 <= CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 2
(CONST_0 - int0[0]) < CONST_100 &&
int0[0] <= CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
CONST_0 != ((CONST_0 - int0) + CONST_5) &&
(CONST_0 - int0) >= CONST_100 &&
int0 <= CONST_0 -> true

### PCs: total:25 sat:16 unsat:9

string analysis: SPC # = 0
NPC constraint # = 3
CONST_0 != ((CONST_0 - int0) + CONST_5) &&
(CONST_0 - int0) >= CONST_100 &&
int0 <= CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 3
CONST_0 == ((CONST_0 - int0) + CONST_5) &&
(CONST_0 - int0) >= CONST_100 &&
int0 <= CONST_0 -> false

### PCs: total:26 sat:16 unsat:10

Using solver: ProblemZ3
numeric PC: constraint # = 2
(CONST_0 - int0) >= CONST_100 &&
int0 <= CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 2
(CONST_0 - int0[-100]) >= CONST_100 &&
int0[-100] <= CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 1
int0[-100] <= CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 1
int0[0] <= CONST_0

====================================================== Method Sequences
[]

====================================================== JUnit 4.0 test class
import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;

public class Test {

	private  ;

	@Before
	public void setUp() throws Exception {
		 = new ();
	}

	public void test0() {
	}
}

====================================================== results
no errors detected

====================================================== statistics
elapsed time:       00:00:00
states:             new=7,visited=0,backtracked=7,end=4
search:             maxDepth=3,constraints=0
choice generators:  thread=1 (signal=0,lock=1,sharedRef=0,threadApi=0,reschedule=0), data=3
heap:               new=472,released=48,maxLive=461,gcCycles=7
instructions:       6498
max memory:         232MB
loaded code:        classes=85,methods=1829

====================================================== search finished: 6/22/25 9:02 PM
SAFE
