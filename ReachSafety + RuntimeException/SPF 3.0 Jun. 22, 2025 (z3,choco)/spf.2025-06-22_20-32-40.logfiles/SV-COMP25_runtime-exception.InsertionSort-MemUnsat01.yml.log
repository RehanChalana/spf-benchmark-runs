./jpf-sv-comp --propertyfile ../../sv-benchmarks/java/properties/runtime-exception.prp ../../sv-benchmarks/java/common ../../sv-benchmarks/java/algorithms/InsertionSort-MemUnsat01


--------------------------------------------------------------------------------


/tmp/jpf-benchmark.c0QXVZ/config.jpf
LD_LIBRARY_PATH=/home/rc22/code/gsoc/bench-defs/bin/spf-dx88J72lU9/jpf-symbc/lib:
Running Symbolic PathFinder ...
symbolic.dp=[z3, choco]
symbolic.string_dp_timeout_ms=3000
symbolic.string_dp_alpha=A-Z
symbolic.string_dp_alphaSize=26
symbolic.string_dp_upper=10
symbolic.string_dp_lower=1
symbolic.string_dp=none
symbolic.choco_time_bound=30000
symbolic.max_pc_length=2147483647
symbolic.max_pc_msec=0
symbolic.bvlength=64
symbolic.min_int=-2147483648
symbolic.min_long=-9223372036854775808
symbolic.min_short=-32768
symbolic.min_byte=-128
symbolic.min_char=0
symbolic.max_int=2147483647
symbolic.max_long=9223372036854775807
symbolic.max_short=32767
symbolic.max_byte=127
symbolic.max_char=65535
symbolic.min_double=4.9E-324
symbolic.max_double=1.7976931348623157E308
JavaPathfinder core system v8.0 (rev 4d2d417b713391c923fcff22fc7ee9a8fd986a41) - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
Main.main()

====================================================== search started: 6/22/25 9:47 PM
New sym int int0 min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 1
int0 <= CONST_0 -> true

### PCs: total:1 sat:1 unsat:0

string analysis: SPC # = 0
NPC constraint # = 1
int0 <= CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 1
int0 > CONST_0 -> true

### PCs: total:2 sat:2 unsat:0

string analysis: SPC # = 0
NPC constraint # = 1
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 < CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:3 sat:2 unsat:1

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 2
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:4 sat:3 unsat:1

string analysis: SPC # = 0
NPC constraint # = 2
int0 >= CONST_0 &&
int0 > CONST_0
New sym int [I@1d3_length min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 4
CONST_0 >= int0 &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:5 sat:3 unsat:2

Using solver: ProblemZ3
numeric PC: constraint # = 4
CONST_0 < int0 &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:6 sat:4 unsat:2

string analysis: SPC # = 0
NPC constraint # = 4
CONST_0 < int0 &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 5
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:7 sat:5 unsat:2

string analysis: SPC # = 0
NPC constraint # = 5
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 7
CONST_1 >= int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:8 sat:6 unsat:2

string analysis: SPC # = 0
NPC constraint # = 7
CONST_1 >= int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 7
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:9 sat:7 unsat:2

string analysis: SPC # = 0
NPC constraint # = 7
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 9
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:10 sat:8 unsat:2

string analysis: SPC # = 0
NPC constraint # = 9
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 11
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:11 sat:9 unsat:2

string analysis: SPC # = 0
NPC constraint # = 11
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 11
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:12 sat:10 unsat:2

string analysis: SPC # = 0
NPC constraint # = 11
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 13
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:13 sat:11 unsat:2

string analysis: SPC # = 0
NPC constraint # = 13
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 15
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:14 sat:12 unsat:2

string analysis: SPC # = 0
NPC constraint # = 15
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 15
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:15 sat:13 unsat:2

string analysis: SPC # = 0
NPC constraint # = 15
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 17
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:16 sat:14 unsat:2

string analysis: SPC # = 0
NPC constraint # = 17
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 19
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:17 sat:15 unsat:2

string analysis: SPC # = 0
NPC constraint # = 19
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 19
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:18 sat:16 unsat:2

string analysis: SPC # = 0
NPC constraint # = 19
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 21
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:19 sat:17 unsat:2

string analysis: SPC # = 0
NPC constraint # = 21
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 23
CONST_5 >= int0 &&
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:20 sat:18 unsat:2

string analysis: SPC # = 0
NPC constraint # = 23
CONST_5 >= int0 &&
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 23
CONST_5 < int0 &&
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:21 sat:19 unsat:2

string analysis: SPC # = 0
NPC constraint # = 23
CONST_5 < int0 &&
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0

====================================================== search constraint
depth limit reached: 13

====================================================== snapshot 
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at Main.main(Main.java:61)

Using solver: ProblemZ3
numeric PC: constraint # = 23
CONST_5 < int0 &&
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 23
CONST_5 < int0[11803] &&
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length[11803] &&
CONST_4 < int0[11803] &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[11803] &&
CONST_3 < int0[11803] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[11803] &&
CONST_2 < int0[11803] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[11803] &&
CONST_1 < int0[11803] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[11803] &&
[I@1d3_length[11803] == int0[11803] &&
int0[11803] >= CONST_0 &&
int0[11803] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 24
CONST_1 >= [I@1d3_length &&
CONST_5 >= int0 &&
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:22 sat:19 unsat:3

Using solver: ProblemZ3
numeric PC: constraint # = 23
CONST_5 >= int0 &&
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:23 sat:20 unsat:3

string analysis: SPC # = 0
NPC constraint # = 23
CONST_5 >= int0 &&
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0

====================================================== search constraint
depth limit reached: 13

====================================================== snapshot 
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at Main.sort(Main.java:44)
	at Main.main(Main.java:65)

Using solver: ProblemZ3
numeric PC: constraint # = 23
CONST_5 >= int0 &&
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 23
CONST_5 >= int0[5] &&
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length[5] &&
CONST_4 < int0[5] &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[5] &&
CONST_3 < int0[5] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[5] &&
CONST_2 < int0[5] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[5] &&
CONST_1 < int0[5] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[5] &&
[I@1d3_length[5] == int0[5] &&
int0[5] >= CONST_0 &&
int0[5] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 22
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length[5] &&
CONST_4 < int0[5] &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[5] &&
CONST_3 < int0[5] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[5] &&
CONST_2 < int0[5] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[5] &&
CONST_1 < int0[5] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[5] &&
[I@1d3_length[5] == int0[5] &&
int0[5] >= CONST_0 &&
int0[5] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 22
[I@1d3!4[CONST_4] <- (int0 - CONST_4) == [I@1d3!5 &&
CONST_4 >= CONST_0 &&
CONST_4 < [I@1d3_length[8370] &&
CONST_4 < int0[8370] &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[8370] &&
CONST_3 < int0[8370] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[8370] &&
CONST_2 < int0[8370] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[8370] &&
CONST_1 < int0[8370] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[8370] &&
[I@1d3_length[8370] == int0[8370] &&
int0[8370] >= CONST_0 &&
int0[8370] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 20
CONST_4 >= [I@1d3_length &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:24 sat:20 unsat:4

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 20
CONST_4 < CONST_0 &&
CONST_4 < int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:25 sat:20 unsat:5

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 19
CONST_4 < int0[8370] &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[8370] &&
CONST_3 < int0[8370] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[8370] &&
CONST_2 < int0[8370] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[8370] &&
CONST_1 < int0[8370] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[8370] &&
[I@1d3_length[8370] == int0[8370] &&
int0[8370] >= CONST_0 &&
int0[8370] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 19
CONST_4 < int0[32290] &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[32290] &&
CONST_3 < int0[32290] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[32290] &&
CONST_2 < int0[32290] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[32290] &&
CONST_1 < int0[32290] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[32290] &&
[I@1d3_length[32290] == int0[32290] &&
int0[32290] >= CONST_0 &&
int0[32290] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 20
CONST_1 >= [I@1d3_length &&
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:26 sat:20 unsat:6

Using solver: ProblemZ3
numeric PC: constraint # = 19
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:27 sat:21 unsat:6

string analysis: SPC # = 0
NPC constraint # = 19
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 19
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:28 sat:22 unsat:6

string analysis: SPC # = 0
NPC constraint # = 19
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 20
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:29 sat:23 unsat:6

string analysis: SPC # = 0
NPC constraint # = 20
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 22
[I@1d3!5[1] <= [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:30 sat:24 unsat:6

string analysis: SPC # = 0
NPC constraint # = 22
[I@1d3!5[1] <= [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 22
[I@1d3!5[1] > [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:31 sat:24 unsat:7


====================================================== search constraint
depth limit reached: 13

====================================================== snapshot 
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at Main.sort(Main.java:51)
	at Main.main(Main.java:65)

Using solver: ProblemZ3
numeric PC: constraint # = 21
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 21
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147477795] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147477795] &&
CONST_4 >= int0[4] &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[4] &&
CONST_3 < int0[4] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[4] &&
CONST_2 < int0[4] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[4] &&
CONST_1 < int0[4] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[4] &&
[I@1d3_length[4] == int0[4] &&
int0[4] >= CONST_0 &&
int0[4] > CONST_0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 21
CONST_1 >= [I@1d3_length &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:32 sat:24 unsat:8


====================================================== search constraint
depth limit reached: 13

====================================================== snapshot 
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at Main.sort(Main.java:47)
	at Main.main(Main.java:65)

string analysis: SPC # = 0
NPC constraint # = 0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 21
CONST_1 < CONST_0 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:33 sat:24 unsat:9


====================================================== search constraint
depth limit reached: 13

====================================================== snapshot 
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at Main.sort(Main.java:47)
	at Main.main(Main.java:65)

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 20
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147477795] &&
CONST_4 >= int0[4] &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[4] &&
CONST_3 < int0[4] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[4] &&
CONST_2 < int0[4] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[4] &&
CONST_1 < int0[4] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[4] &&
[I@1d3_length[4] == int0[4] &&
int0[4] >= CONST_0 &&
int0[4] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 20
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147455548] &&
CONST_4 >= int0[4] &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[4] &&
CONST_3 < int0[4] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[4] &&
CONST_2 < int0[4] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[4] &&
CONST_1 < int0[4] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[4] &&
[I@1d3_length[4] == int0[4] &&
int0[4] >= CONST_0 &&
int0[4] > CONST_0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 20
CONST_1 >= [I@1d3_length &&
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:34 sat:24 unsat:10

string analysis: SPC # = 0
NPC constraint # = 0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 20
CONST_1 < CONST_0 &&
CONST_4 >= int0 &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:35 sat:24 unsat:11

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 19
CONST_4 >= int0[4] &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[4] &&
CONST_3 < int0[4] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[4] &&
CONST_2 < int0[4] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[4] &&
CONST_1 < int0[4] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[4] &&
[I@1d3_length[4] == int0[4] &&
int0[4] >= CONST_0 &&
int0[4] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 19
CONST_4 >= int0[4] &&
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[4] &&
CONST_3 < int0[4] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[4] &&
CONST_2 < int0[4] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[4] &&
CONST_1 < int0[4] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[4] &&
[I@1d3_length[4] == int0[4] &&
int0[4] >= CONST_0 &&
int0[4] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 18
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[4] &&
CONST_3 < int0[4] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[4] &&
CONST_2 < int0[4] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[4] &&
CONST_1 < int0[4] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[4] &&
[I@1d3_length[4] == int0[4] &&
int0[4] >= CONST_0 &&
int0[4] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 18
[I@1d3!3[CONST_3] <- (int0 - CONST_3) == [I@1d3!4 &&
CONST_3 >= CONST_0 &&
CONST_3 < [I@1d3_length[1146] &&
CONST_3 < int0[1146] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[1146] &&
CONST_2 < int0[1146] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[1146] &&
CONST_1 < int0[1146] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[1146] &&
[I@1d3_length[1146] == int0[1146] &&
int0[1146] >= CONST_0 &&
int0[1146] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 16
CONST_3 >= [I@1d3_length &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:36 sat:24 unsat:12

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 16
CONST_3 < CONST_0 &&
CONST_3 < int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:37 sat:24 unsat:13

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 15
CONST_3 < int0[1146] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[1146] &&
CONST_2 < int0[1146] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[1146] &&
CONST_1 < int0[1146] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[1146] &&
[I@1d3_length[1146] == int0[1146] &&
int0[1146] >= CONST_0 &&
int0[1146] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 15
CONST_3 < int0[285] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[285] &&
CONST_2 < int0[285] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[285] &&
CONST_1 < int0[285] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[285] &&
[I@1d3_length[285] == int0[285] &&
int0[285] >= CONST_0 &&
int0[285] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 16
CONST_1 >= [I@1d3_length &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:38 sat:24 unsat:14

Using solver: ProblemZ3
numeric PC: constraint # = 15
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:39 sat:25 unsat:14

string analysis: SPC # = 0
NPC constraint # = 15
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 15
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:40 sat:26 unsat:14

string analysis: SPC # = 0
NPC constraint # = 15
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 16
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:41 sat:27 unsat:14

string analysis: SPC # = 0
NPC constraint # = 16
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 18
[I@1d3!5[1] <= [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:42 sat:28 unsat:14

string analysis: SPC # = 0
NPC constraint # = 18
[I@1d3!5[1] <= [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 18
[I@1d3!5[1] > [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:43 sat:28 unsat:15

Using solver: ProblemZ3
numeric PC: constraint # = 17
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:44 sat:29 unsat:15

string analysis: SPC # = 0
NPC constraint # = 17
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 19
CONST_2 >= [I@1d3_length &&
[I@1d3!5[CONST_2] <- [I@1d3!5[1] == [I@1d3!6 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:45 sat:29 unsat:16

Using solver: ProblemZ3
numeric PC: constraint # = 18
[I@1d3!5[CONST_2] <- [I@1d3!5[1] == [I@1d3!6 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:46 sat:30 unsat:16

string analysis: SPC # = 0
NPC constraint # = 18
[I@1d3!5[CONST_2] <- [I@1d3!5[1] == [I@1d3!6 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
New sym int [I@1d3!6[2] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 18
[I@1d3!5[CONST_2] <- [I@1d3!5[1] == [I@1d3!6 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:47 sat:31 unsat:16

string analysis: SPC # = 0
NPC constraint # = 18
[I@1d3!5[CONST_2] <- [I@1d3!5[1] == [I@1d3!6 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0

====================================================== search constraint
depth limit reached: 13

====================================================== snapshot 
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at Main.sort(Main.java:47)
	at Main.main(Main.java:65)

Using solver: ProblemZ3
numeric PC: constraint # = 19
[I@1d3!6[CONST_2] == [I@1d3!6[2] &&
[I@1d3!5[CONST_2] <- [I@1d3!5[1] == [I@1d3!6 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 19
[I@1d3!6[CONST_2] == [I@1d3!6[2][0] &&
[I@1d3!5[CONST_2] <- [I@1d3!5[1] == [I@1d3!6 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1][0] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1][0] &&
CONST_3 >= int0[3] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[3] &&
CONST_2 < int0[3] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[3] &&
CONST_1 < int0[3] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[3] &&
[I@1d3_length[3] == int0[3] &&
int0[3] >= CONST_0 &&
int0[3] > CONST_0
New sym int [I@1d3!6[2] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 19
CONST_2 >= [I@1d3_length &&
[I@1d3!5[CONST_2] <- [I@1d3!5[1] == [I@1d3!6 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:48 sat:31 unsat:17


====================================================== search constraint
depth limit reached: 13

====================================================== snapshot 
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at Main.sort(Main.java:44)
	at Main.main(Main.java:65)

string analysis: SPC # = 0
NPC constraint # = 0
New sym int [I@1d3!6[2] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 19
CONST_2 < CONST_0 &&
[I@1d3!5[CONST_2] <- [I@1d3!5[1] == [I@1d3!6 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:49 sat:31 unsat:18


====================================================== search constraint
depth limit reached: 13

====================================================== snapshot 
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at Main.sort(Main.java:44)
	at Main.main(Main.java:65)

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 18
[I@1d3!5[CONST_2] <- [I@1d3!5[1] == [I@1d3!6 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1][0] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1][0] &&
CONST_3 >= int0[3] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[3] &&
CONST_2 < int0[3] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[3] &&
CONST_1 < int0[3] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[3] &&
[I@1d3_length[3] == int0[3] &&
int0[3] >= CONST_0 &&
int0[3] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 18
[I@1d3!5[CONST_2] <- [I@1d3!5[1] == [I@1d3!6 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147468968] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147468968] &&
CONST_3 >= int0[3] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[3] &&
CONST_2 < int0[3] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[3] &&
CONST_1 < int0[3] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[3] &&
[I@1d3_length[3] == int0[3] &&
int0[3] >= CONST_0 &&
int0[3] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 18
CONST_2 >= [I@1d3_length &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:50 sat:31 unsat:19

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 18
CONST_2 < CONST_0 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:51 sat:31 unsat:20

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 17
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147468968] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147468968] &&
CONST_3 >= int0[3] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[3] &&
CONST_2 < int0[3] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[3] &&
CONST_1 < int0[3] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[3] &&
[I@1d3_length[3] == int0[3] &&
int0[3] >= CONST_0 &&
int0[3] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 17
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147462672] &&
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147462672] &&
CONST_3 >= int0[3] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[3] &&
CONST_2 < int0[3] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[3] &&
CONST_1 < int0[3] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[3] &&
[I@1d3_length[3] == int0[3] &&
int0[3] >= CONST_0 &&
int0[3] > CONST_0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 17
CONST_1 >= [I@1d3_length &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:52 sat:31 unsat:21

string analysis: SPC # = 0
NPC constraint # = 0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 17
CONST_1 < CONST_0 &&
[I@1d3!5[CONST_1] == [I@1d3!5[1] &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:53 sat:31 unsat:22

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 16
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147462672] &&
CONST_3 >= int0[3] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[3] &&
CONST_2 < int0[3] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[3] &&
CONST_1 < int0[3] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[3] &&
[I@1d3_length[3] == int0[3] &&
int0[3] >= CONST_0 &&
int0[3] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 16
[I@1d3!5[CONST_1] == [I@1d3!5[1][-2147451757] &&
CONST_3 >= int0[3] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[3] &&
CONST_2 < int0[3] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[3] &&
CONST_1 < int0[3] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[3] &&
[I@1d3_length[3] == int0[3] &&
int0[3] >= CONST_0 &&
int0[3] > CONST_0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 16
CONST_1 >= [I@1d3_length &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:54 sat:31 unsat:23

string analysis: SPC # = 0
NPC constraint # = 0
New sym int [I@1d3!5[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 16
CONST_1 < CONST_0 &&
CONST_3 >= int0 &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:55 sat:31 unsat:24

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 15
CONST_3 >= int0[3] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[3] &&
CONST_2 < int0[3] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[3] &&
CONST_1 < int0[3] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[3] &&
[I@1d3_length[3] == int0[3] &&
int0[3] >= CONST_0 &&
int0[3] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 15
CONST_3 >= int0[3] &&
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[3] &&
CONST_2 < int0[3] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[3] &&
CONST_1 < int0[3] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[3] &&
[I@1d3_length[3] == int0[3] &&
int0[3] >= CONST_0 &&
int0[3] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 14
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[3] &&
CONST_2 < int0[3] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[3] &&
CONST_1 < int0[3] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[3] &&
[I@1d3_length[3] == int0[3] &&
int0[3] >= CONST_0 &&
int0[3] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 14
[I@1d3!2[CONST_2] <- (int0 - CONST_2) == [I@1d3!3 &&
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length[21658] &&
CONST_2 < int0[21658] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[21658] &&
CONST_1 < int0[21658] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[21658] &&
[I@1d3_length[21658] == int0[21658] &&
int0[21658] >= CONST_0 &&
int0[21658] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 12
CONST_2 >= [I@1d3_length &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:56 sat:31 unsat:25

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 12
CONST_2 < CONST_0 &&
CONST_2 < int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:57 sat:31 unsat:26

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 11
CONST_2 < int0[21658] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[21658] &&
CONST_1 < int0[21658] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[21658] &&
[I@1d3_length[21658] == int0[21658] &&
int0[21658] >= CONST_0 &&
int0[21658] > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 11
CONST_2 < int0[3] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[3] &&
CONST_1 < int0[3] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[3] &&
[I@1d3_length[3] == int0[3] &&
int0[3] >= CONST_0 &&
int0[3] > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 12
CONST_1 >= [I@1d3_length &&
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:58 sat:31 unsat:27

Using solver: ProblemZ3
numeric PC: constraint # = 11
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:59 sat:32 unsat:27

string analysis: SPC # = 0
NPC constraint # = 11
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
New sym int [I@1d3!6[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 11
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:60 sat:33 unsat:27

string analysis: SPC # = 0
NPC constraint # = 11
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
New sym int [I@1d3!6[1] min=-2147483648, max=2147483647
Using solver: ProblemZ3
numeric PC: constraint # = 12
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:61 sat:34 unsat:27

string analysis: SPC # = 0
NPC constraint # = 12
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 14
[I@1d3!6[1] <= [I@1d3!6[1] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:62 sat:35 unsat:27

string analysis: SPC # = 0
NPC constraint # = 14
[I@1d3!6[1] <= [I@1d3!6[1] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 14
[I@1d3!6[1] > [I@1d3!6[1] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:63 sat:35 unsat:28

Using solver: ProblemZ3
numeric PC: constraint # = 15
CONST_2 >= CONST_0 &&
CONST_2 < [I@1d3_length &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> false

### PCs: total:64 sat:35 unsat:29

string analysis: SPC # = 0
NPC constraint # = 0
Using solver: ProblemZ3
numeric PC: constraint # = 14
CONST_2 >= [I@1d3_length &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

### PCs: total:65 sat:36 unsat:29

string analysis: SPC # = 0
NPC constraint # = 14
CONST_2 >= [I@1d3_length &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
--------->property violated
pc 14 constraint # = 14
CONST_2 >= [I@1d3_length &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0
Using solver: ProblemZ3
numeric PC: constraint # = 14
CONST_2 >= [I@1d3_length &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1] &&
CONST_2 >= int0 &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length &&
CONST_1 < int0 &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length &&
[I@1d3_length == int0 &&
int0 >= CONST_0 &&
int0 > CONST_0 -> true

string analysis: SPC # = 0
NPC constraint # = 14
CONST_2 >= [I@1d3_length[2] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1][-2147454767] &&
[I@1d3!6[CONST_1] == [I@1d3!6[1][-2147454767] &&
CONST_2 >= int0[2] &&
[I@1d3!1[CONST_1] <- (int0 - CONST_1) == [I@1d3!2 &&
CONST_1 >= CONST_0 &&
CONST_1 < [I@1d3_length[2] &&
CONST_1 < int0[2] &&
[I@1d3[CONST_0] <- int0 == [I@1d3!1 &&
CONST_0 >= CONST_0 &&
CONST_0 < [I@1d3_length[2] &&
[I@1d3_length[2] == int0[2] &&
int0[2] >= CONST_0 &&
int0[2] > CONST_0

====================================================== error 1
gov.nasa.jpf.vm.NoUncaughtExceptionsProperty
java.lang.AssertionError
	at Main.main(Main.java:67)


====================================================== snapshot #1
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at Main.main(Main.java:67)


====================================================== Method Sequences
[]
[(expected = java.lang.AssertionError.class), ##EXCEPTION## "java.lang.AssertionError..."]

====================================================== JUnit 4.0 test class
import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;

public class Test {

	private  ;

	@Before
	public void setUp() throws Exception {
		 = new ();
	}

	public void test0() {
	}

	@Test(expected = java.lang.AssertionError.class)
	public void test1() {
		//should lead to ##EXCEPTION## "java.lang.AssertionError..."
	}
}

====================================================== results
error #1: gov.nasa.jpf.vm.NoUncaughtExceptionsProperty "java.lang.AssertionError  at Main.main(Main.java:6..."

====================================================== statistics
elapsed time:       00:00:00
states:             new=46,visited=0,backtracked=36,end=0
search:             maxDepth=13,constraints=8
choice generators:  thread=1 (signal=0,lock=1,sharedRef=0,threadApi=0,reschedule=0), data=21
heap:               new=499,released=8,maxLive=459,gcCycles=19
instructions:       6620
max memory:         232MB
loaded code:        classes=93,methods=1885

====================================================== search finished: 6/22/25 9:47 PM
UNSAFE
